///////////////////////////////////////////////////////////
//  AddProductCB.cs
//  Implementation of the Class AddProductCB
//  Generated by Enterprise Architect
//  Created on:      28-sep-2015 17:43:46
//  Original author: benja
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using System.IO;
using SharedLib.Models;
using Backend.Communication;

namespace Backend.AddProduct {
    public class AddProductCB : IAddProduct
    {
        IProtocol _protocol;
        internal AddProductWindow _window;
        string _error;

        private string ip = "127.0.0.1";
        private int port = 9000;
        public IProductGenerator _productGenerator;
        private IClient _client;

        public AddProductCB(IProtocol protocol, AddProductWindow window, IClient client) {
            _protocol = protocol;
            _window = window;
            LastError = null;
            _client = client;
            _productGenerator = new ProductGenerator(this);

        }

        public bool CreateProduct() {

            // Create the product
            var product = _productGenerator.GenerateProduct();



            if (product.Name == "" || product.Price <= 0 || product.ProductNumber == "")
            {
                LastError = "Enter correct product details.";
                return false;
            }

            // Generate XML from product
            string cmdtoSend = _protocol.ProductXMLParser(product);

            // New client to use to send data to central server
          

            // Send the XML data
            if (!_client.Send(cmdtoSend))
            {
                LastError = "Connection Error";
                return false;
            }

            return true;
        }

        public string LastError
        {
            private set { _error = value; }
            get { return _error; }
        }

    }//end AddProductCB
}