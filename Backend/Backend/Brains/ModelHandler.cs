///////////////////////////////////////////////////////////
//  AddProductCB.cs
//  Implementation of the Class AddProductCB
//  Generated by Enterprise Architect
//  Created on:      28-sep-2015 17:43:46
//  Original author: benja
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using Backend.Communication;
using Backend.Models;
using SharedLib.Models;

namespace Backend.Brains
{
    public class ModelHandler : IModelHandler
    {
        private readonly IClient _client;
        private readonly IProtocol _protocol;
        public  IError Error;


        public ModelHandler(IProtocol protocol, IClient client)
        {
            _protocol = protocol;
            LastError = null;
            _client = client;
            Error = new Error();
        }

        public bool CreateProduct(BackendProduct product)
        {
            if (string.IsNullOrWhiteSpace(product.BName)|| product.BPrice < 0 || string.IsNullOrWhiteSpace(product.BProductNumber))
            {
                LastError = "Enter correct product details.";
                Error.StdErr(LastError);
                return false;
            }
            
            // Generate XML from product
            var cmdtoSend = _protocol.ProductXMLParser(product);
            _client.Send(cmdtoSend);

            return true;
        }

        public bool EditProduct(BackendProduct product)
        {
            // Generate XML from Category
            var cmdtoSend = _protocol.EditProductXMLParser(product);
            _client.Send(cmdtoSend);

            return true;
        }

        

        public bool DeleteProduct(Product product)
        {

            _client.Send(_protocol.DeleteProductXMLParser(product));
            return true;
        }

        public bool EditCategory(BackendProductCategory category)
        {

            // Generate XML from Category
            var cmdtoSend = _protocol.EditCategoryXMLParser(category);
            _client.Send(cmdtoSend);
            return true;

        }

        public bool AddCategory(BackendProductCategory category)
        {
            // Generate XML from Category
            var cmdtoSend = _protocol.CategoryXMLParser(category);
            _client.Send(cmdtoSend);
            return true;
        }

        public bool DeleteCategory(BackendProductCategory category)
        {
            var cmdtosend = _protocol.DeleteCategoryXMLParser(category);
            _client.Send(cmdtosend);
            return true;
        }

        
        public string LastError { private set; get; }
    } //end AddProductCB
}